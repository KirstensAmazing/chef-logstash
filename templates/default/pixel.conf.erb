input {

  file {
    type => "celeryd-bulk"
    path => ["/srv/socialcode/log/celeryd-bulk.log"]
  }
  file {
    type => "celeryd"
    path => ["/srv/socialcode/log/celeryd.log"]
  }
  file {
    type => "celeryd-triggers"
    path => ["/srv/socialcode/log/celeryd-triggers.log"]
  }
  file {
    type => "celeryd-notifications"
    path => ["/srv/socialcode/log/celeryd-notifications.log"]
 }
  file {
    type => "django"
    path => ["/srv/socialcode/log/django.log"]
  }
  file {
    type => "gunicorn"
    path => ["/srv/socialcode/log/gunicorn.log"]
  }
}
filter {
## This will pull out unnecessary and repeated celery information about it starting jobs. This goes first so that it doesn't get mutated later.
  grep {
    type => "celeryd"
    match => ["@message", "^([D|d]ebug|DEBUG|[N|n]otice|NOTICE|[I|i]nfo|INFO|[W|w]arn?(?:ing)?|WARN?(?:ING)?|[E|e]rr?(?:or)?|ERR?(?:OR)?|[C|c]rit?(?:ical)?|CRIT?(?:ICAL)?) [0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2},[0-9]{3} .*?$"]
    negate => true
  }
## This will capture the message in the format time: severity/process message .  This is capturing the data and tagging it so that it can be exported to our GELF format later
  grok {
    match => ["@message", "\[%{DATESTAMP:timestamp}: %{DATA:severity}/%{DATA:process}\] %{DATA:message}$"]
    keep_empty_captures => true
     drop_if_match => false
   }

## This sets error handling to attach tracebacks to previous error messages.
  multiline {
    pattern => "^\[201[0-9]-[0-9]{2}-[0-9]{2} "
    what => "previous"
    negate => "true"
  }

## This sets the date into the appropriate gelf date format
   date {
     logdate => "yyyy-MM-dd HH:mm:ss,SSS"
   }
 ## This will strip the timestamp out of the message so that it no longer appears in the GELF shortmessage.
   mutate {
     gsub => ["@message", "^\[[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2},[0-9]{3}: (?:.*?)/(?:.*?)\] ", "\1"]
   }
 }
 output {
   stdout {
     debug => false
     debug_format => "json"
   }
   gelf {
     host => "domU-12-31-39-18-19-13.compute-1.internal"
     facility => "%{@type}/%{process}"
     level => ["%{severity}", "INFO"]
     port => 12205
     sender => "%{@source_host}"
   }
  }
